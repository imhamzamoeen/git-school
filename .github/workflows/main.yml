# its a key value pair with python syntax
# first it will contain a name that will be name of this file
name:
  "hello world"
  # then it need to define at which event this will be triggered like create of branch del of branch push pull merge

on:
  #trigger this whenever the push event is done on the beneath branches
  push: # here the event name
    branches: #whenever the above written event happens on the beneath branches the jobs will run
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs: # here starts the job section
  hello: # the name you have given to your first job, its easier to debug then this will be written there at the github action
    runs-on: ubuntu-latest # on which runner it will run since each job to run independently
    steps: #steps of the job
      - uses: actions/checkout@v2 # which action it is using as there are lot of pre built written by people so we use this and its like owner/repo@version or tag or branch
      - name: hello world #name of the step
        run: echo "hello world" #what to do
        shell: bash #what terminal
      - name: Send Slack Message Of start
        id: slack #pre written
        uses: slackapi/slack-github-action@v1.26.0 #what action we are using of other
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: "C079R7AGEE7" #we can get from a channel url
          # For posting a rich message using Block Kit
          payload: |
            {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
            {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            }
            }
            ]
            }
        env:  #we can pass data to that task with either with sectoin or with env
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_WEBHOOK_URL }} # we have declared it in the secret section under setting section of this repo

  bye:
    runs-on: ubuntu-latest
    steps:
      - name: Good Bye
        run: echo "Good Bye"
        shell: bash
